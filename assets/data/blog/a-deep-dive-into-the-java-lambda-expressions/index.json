{"hash":"b02e232148efc823442406fe0ca9e48c3fb3a829","data":{"blog":{"title":"A deep dive into the Java lambda expressions","path":"/blog/a-deep-dive-into-the-java-lambda-expressions/","image":{"type":"image","mimeType":"image/png","src":"/geekyturtles-code/assets/static/cover.872e63c.94aa1ac622d921496a0d91e818bd4f74.png","size":{"width":1600,"height":800},"sizes":"(max-width: 1600px) 100vw, 1600px","srcset":["/geekyturtles-code/assets/static/cover.bb17b12.94aa1ac622d921496a0d91e818bd4f74.png 480w","/geekyturtles-code/assets/static/cover.b28baf0.94aa1ac622d921496a0d91e818bd4f74.png 1024w","/geekyturtles-code/assets/static/cover.872e63c.94aa1ac622d921496a0d91e818bd4f74.png 1600w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1600 800' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-3d91e583b689239ac83b1ec9e27e6489'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-3d91e583b689239ac83b1ec9e27e6489)' width='1600' height='800' xlink:href='data:image/png%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAgAEADASIAAhEBAxEB/8QAGQAAAwEBAQAAAAAAAAAAAAAAAAQGBQID/8QAKxAAAgIBAwMEAQMFAAAAAAAAAQIDEQQABSESEzEGQVFhIjJxgRRScpHh/8QAGAEBAQEBAQAAAAAAAAAAAAAAAAMBBAb/xAAjEQACAQIFBQEAAAAAAAAAAAAAAQIRIQMEEzGhEjJRgbHw/9oADAMBAAIRAxEAPwDa9If0%2bPtWNhYu4xu8Ezy5CwxuHYoA4HWo4RjxZNcCx5GpfffU274sKbccZ9pykCtL2pmDMeTZH8/J4r5vSe6ZQh9H7JBiKsRyllOW8YozGOQqit80Dde9gm9TpZpWQO3gBAWNAAcAfsNVoe/wcsnJzle74f7gcz93z8%2bMJl5LyJdkUF6z/c1AdR%2bzzpDVNlyeneskRT2Xc9xEIQ8igBfIFk8V4HzpZZdjbKJYSLjLOzrH2yS6FVoXdiiD/vQ6I4iStFr0YWjVFFmbCry9OH0r0Mqu6u/kUCw6v38VzVaMnJ9PviSxwwyq4D9oFD1BiBXU3VyQQfaqPzobquvayd0aNMwYry4mTkfpjgC2SOCxIAW/nyf4OtKtpbnc2X1bZjYaAhY3eV7H6nPAN/4gDSejRoEktjfwd5xUgwocvE7yQp2j1UQLcsXArzRIrXbb7iBnCbbCylGUM6ISxJH5EUB4Ff8AdTujWEtCFalG2/YZDAbfRY2GHRa/YFUTfi/HjnzpfL3jGyMbJiXb4oe4Kj7YUdsfjxdXVgn7vWJpjGwsrKWRsXGnmWMdTmOMt0j5NaDShG54AEngE%2b/GqHY8N5vS3qKeQXBHHEYwfeUSCyv2ELXXs3OuvTmz7p25txxIcM9lHBjzPDAiiOluD59z9/B1XepcTa02h8iWDKOHgzLFGsRRYWYWsqKFANFq/K745HBGlSGPmF1KC8r7sf/Z' /%3e%3c/svg%3e"},"image_caption":"A deep dive into the Java lambda expressions","excerpt":"Lambda expressions are introduced in java8 version.Let us look about Lamda expressions in detail.","content":"<p>In this article, you will learn about what exactly lambda expressions and how to use it in java.</p>\n<p><strong>Prerequisites:</strong></p>\n<ol>\n<li>Knowledge in java</li>\n</ol>\n<h3 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction:</h3>\n<p>Lambda expressions are introduced in java8 version. While java introducing this feature, It’s new for java. Not for other languages.</p>\n<h3 id=\"before-lambda-expressions\"><a href=\"#before-lambda-expressions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Before lambda expressions:</h3>\n<p>Before jumping into the lambda expression, we need to know what’s the problem java developers faced before introducing the lambda expressions.</p>\n<h4 id=\"example-1\"><a href=\"#example-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example 1:</h4>\n<p>Let’s take an example of creating thread before lambda expressions are introduced.</p>\n<pre><code class=\"language-java\">class MyRunnable implements Runnable {\n public void run() {\n System.out.println(\"I am executed\");\n }\n}\npublic class BeforeLambda {\n public static void main(String args[]) {\n Runnable runnableObj = new MyRunnable();\n Thread t = new Thread(runnableObj);\n t.start();\n }\n}\n</code></pre>\n<p>The internal implementation of Runnable is </p>\n<pre><code class=\"language-java\">package java.lang;\n@FunctionalInterface\npublic interface Runnable {\n    public abstract void run();\n}\n</code></pre>\n<p>Don’t worry about <strong><em>@FunctionalInterface</em></strong> for now, we will see what is the use of FunctionalInterface in this article.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 770 131' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-3147fdd66d803b6d9c70798a2d7e5070'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-3147fdd66d803b6d9c70798a2d7e5070)' width='770' height='131' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAALCAYAAADP9otxAAAACXBIWXMAABJ0AAASdAHeZh94AAADlUlEQVRIx6VW2XbaSBD1N%2bfkK/IDmd/Iy7xmsccniYkhXrDDJoTQigRa0a47VS2EBYTYOH1O04tq61u3qzmrqgpxkiLPC6RZjrKswI3391uzl6YpgiA4KndMrypL0s3IT4Ysz4VPHjPyu44TWudiXdVKQqcoCiSkw2NRlFt71TEfNLI97jnp1NvVzne21czPePIwnKL/a4L%2bSIHjPh2srdSe7zt9CQCNrG7a5E/Gw0iGatiQZBUPAwl3QwW/BhMohrNjOyOwpJmG24cxZtriaDztPc/z8TiaYijrKMrd778FgBtnnjfKsjxQONZPZQDbbnohskP%2bOKCNz0J82w%2b4RM3SbBvbcwliuZpdRSO9E0/7jAKAhOgXRdEWmZe2lzJgN1M1AM0ouqB3QfNiu9fWa9YNcO04n2Vk9ZRYtt/OPrczFnB9H0t3hd7PHi6%2bfMK3r1e4uuqg86OD7nUHXy/P8fH8Evd39%2bj1uvj8%2bRNMa3ESAxo5d%2blAUeawbRvKbIYZ9cl4iLmmQ5ImGA4GkGcKQkpIVdaBG0b9bUJdUzXSkaHM1T%2bycts3IKxWK0xJn323ZQQDUi9EQHefi0ZOdy5JEnH3omgtCl6SxIjWa8RxTGyJBVsSKpyvAaAo8if6bzJaM2I3S81%2bk/ksS0V8jWzRYskxVla/ufttBmwB%2bPf9P3jz9h1kQvXupod%2b/xHD0RjSVMJ4NED//hY3tCfLU4HiaCyJSn5qIeQW0uuxWNgiI4ZhwDJNYoJMjLKhqnPMZBm6YQrgGz1dU6HpBkxDhUW6M2KIpmuwLAuO48AgG2yv9rHHhA0DPM%2bDRnYM0zoE4Pb6Bh8%2bduEsl5hTMIZuUjAqUZEDs4h2ClVr6pJEIMgEzPQkBrTl1lEogmGW8VPqui6NvqC8T1eR174fCLY12fI9F7azFGMQRkKfD%2bzS6FNf0px1%2bRndqTetgzKjWY9t7wDAP5zNJF7DsRf0TBmUAR1RGIoAbdpbUVBpHAmHQRD%2bVRFM6eAcRLQ5cMD1h7LIey7VodVyJZ6xokX/NV2/cAMWj3zomOw8ewU2DOCRbXieewgALxjNBRUleTrBxeV/6Ha76HU6VPB6OL%2b4oOL4E4/9O/y47uL79yvxp2X/br8UAI8OyZT16OAmg63rguIL26FRE4WRr0AYRttawUlQFEWw0qLia1KC%2bEo89zS390JKaH0FzEMAXtNOyf5rdU75j/EHiQOZ9vp/W/i1ZU5LFPgAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"770\" alt=\"A deep dive into the Java lambda expressions - Image 1\" data-srcset=\"/geekyturtles-code/assets/static/BeforeLambda.061cc64.91609ce9b05574c0785377676153e207.png 770w\" data-sizes=\"(max-width: 770px) 100vw, 770px\" data-src=\"/geekyturtles-code/assets/static/BeforeLambda.061cc64.91609ce9b05574c0785377676153e207.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/geekyturtles-code/assets/static/BeforeLambda.061cc64.91609ce9b05574c0785377676153e207.png\" width=\"770\" alt=\"A deep dive into the Java lambda expressions - Image 1\"></noscript></p>\n<p>Now compiling this code, the Java compiler will generate below two class files.</p>\n<p>Now let’s reduce this code using an anonymous inner class.</p>\n<h4 id=\"example-2\"><a href=\"#example-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example 2:</h4>\n<pre><code class=\"language-java\">public class BeforeLambda2 {\n public static void main(String args[]) {\n Runnable runnableObj = new Runnable() {\n public void run() {\n System.out.println(\"I am executed\");\n }\n };\n Thread t = new Thread(runnableObj);\n t.start();\n }\n}\n</code></pre>\n<p>Now Let’s compile this code and see how Java compiler-generated class files,</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 746 132' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-4c8243ec766a3f1e12aa02d70fe90b1a'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-4c8243ec766a3f1e12aa02d70fe90b1a)' width='746' height='132' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAALCAYAAADP9otxAAAACXBIWXMAABJ0AAASdAHeZh94AAADx0lEQVRIx5VW2XLqRhD1Vyd5T%2bUP8jmpSjmJl5jLZmNf9kWAJLQhCe3bSfcgcQUBjKdqakYzPb2e7tZdEIRwvQBBGMGnfV4U4FGUa31UZ1EUIU3Ti3SX3hV5LmQ4Ox%2beHxCfWMgNad3aLmzXp/voSIeiyLEj/Tw/FLQZ8Tgnd0%2b7n3meiTc8ozg5uueRE4%2b85HNnb2289qcYzlYYjCWkWf4/hqfzVOhnjqi/tR0XH8M5ejRVVcdwLmM0X2M0meN9JIn9sZEFHHeH1tsQg8kScZKelX3sgBwb3cTb9wlkzbrugE9Ch1vGZyioC/7KqIzZvy2uo6u2nsq5hBbhACa2bQdhEAhYR3EsGGRZthdMK5/zWZomCIguO9wXV1PmkhPSkidP5hOTzCRJxDevPLPshxFMkwn5e/r9zA8BOofCU8QWpVzmndcQdsdM17IKS5Pxx5/3eHr%2bhtdOC/88PKDTbuHp5RvarQbu//qb9v/i8fER49EYreYLHh6fYZHzbk0BHo5jY7VaQd1ssJSW0DUVk%2bkM8/kCmqbTOqV7CQqlR6WoaRhY05vxeILFYgFdp9QZDuHuvKuG1%2bWmcQSd%2bAwGA1jb7Q8HsJAtHVRRqDycJDHCMBTQ48jHVPg4%2bgkXP%2bKZEL1D%2bXxrMazuszLKKKFaRZX3TFPts4wRkh0QEJe6sV75ge7G%2blOmc53/wQGskLrRYOkKnhsU7c4bJqMhrR1Mp2P0Pj4w6H%2bg0%2b3ie7%2bP5XKJNiFjRhG7tQbUaTxvR8VPhUZRVGQFlmlgQUhgvoZhUvSXUBQZhrk9vOUAaZomaGSZ7wyBBM/3z8P9THFOkwimZWE2m1Ehdo4RwO0oI4I1KcQw3KiKEMQCFXVD3zI5YwZZUQQc53PaE20VodPucM0B3EI9zxOI88mAIKCW6PlUg0Jxxg5i5PGZQEr5Zue6hDgHu91OoIb3aVmnPit4VQ2IBWodsR4cULgOfv/pVzw3%2b%2bQZmwzW4Ng2TNNEQAoaZLBlmeR1k3q1TQq4cEkZ7t23Rr9Ox0ZxKrET2JgoCkWEWTF2CO95JmW748H0TOuQXN/3SL4j6DkF2VHsNC7kVeE%2bhwBOKZ/%2bPdgGdujBATEx%2b%2bXn33DfeEez2USr/Yr%2bew8vjRd0ux10Xnt473Wp4D2h2W6jS6nRoFSZLaSbo19XxCXFGV2maRHUFRg6FcPVWpyx4RJBW5IWtLcPTrAIuks642KpbVRKIYVoJMxJB36jKmusliv68fHPtsV97YkFz%2blpCuCLo/hC///q/8K17nHjg4st8ZIu/wE2na%2bB%2bQpeMQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"746\" alt=\"A deep dive into the Java lambda expressions - Image 2\" data-srcset=\"/geekyturtles-code/assets/static/BeforeLambdaAnonmus.075226a.d4b09b100dd0e593efaa763c6d4bc671.png 746w\" data-sizes=\"(max-width: 746px) 100vw, 746px\" data-src=\"/geekyturtles-code/assets/static/BeforeLambdaAnonmus.075226a.d4b09b100dd0e593efaa763c6d4bc671.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/geekyturtles-code/assets/static/BeforeLambdaAnonmus.075226a.d4b09b100dd0e593efaa763c6d4bc671.png\" width=\"746\" alt=\"A deep dive into the Java lambda expressions - Image 2\"></noscript></p>\n<p>Here, the Java compiler creates two class files for the main class and another for the anonymous inner class.</p>\n<h3 id=\"problems-before-lambda-expressions\"><a href=\"#problems-before-lambda-expressions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Problems before lambda expressions:</h3>\n<p>let’s analyze our anonymous inner class, Does this code has any redundant information?</p>\n<pre><code class=\"language-java\">Runnable runnableObj = new Runnable() {\n public void run() {\n System.out.println(\"I am executed\");\n }\n};\n</code></pre>\n<p>Here we are creating a reference for Runnable interface, so redundant information new Runnable() is not necessary here.</p>\n<pre><code class=\"language-java\">Runnable runnableObj =̵ n̶̵̶e̶̵̶w̶̵̶ ̶R̶̵̶u̶̵̶n̶̵̶n̶̵̶a̶̵̶b̶̵̶l̶̵̶e̶̵̶(̶̵̶)̶̵̶ ̶̵̶{̶̵̶\n      public void run() {\n        System.out.println(\"I am executed\");\n    }\n}̶̵̶;̶̵̶\n</code></pre>\n<p>Here We are creating a reference for Runnable, and Runnable is an interface it only contains one method named <strong>run()</strong>. so we have the only way to provide the implementation for run() method. so redundant information public void run() is not necessary for an anonymous inner class.</p>\n<pre><code class=\"language-java\">Runnable runnableObj = n̶̵̶e̶̵̶w̶̵̶ ̶R̶̵̶u̶̵̶n̶̵̶n̶̵̶a̶̵̶b̶̵̶l̶̵̶e̶̵̶(̶̵̶)̶̵̶ ̶̵̶{̶̵̶\n    p̶u̶b̶l̶i̶c̶ ̶v̶o̶i̶d̶ ̶r̶u̶n̶(̶)̶ ̶{̶\n        System.out.println(\"I am executed\");\n    }̵\n}̶̵̶;̶̵̶\n</code></pre>\n<p>Let’s see if the interface has some parameters with the return type.</p>\n<pre><code class=\"language-java\">interface AddInterface {\n public int add(int a, int  b);\n}\n</code></pre>\n<p>Anonymous inner class will be,</p>\n<pre><code class=\"language-java\">AddInterface testObj = new AddInterface() {\n public int add(int a, int b) {\n return a + b;\n }\n}\n</code></pre>\n<p>testObj is the reference for TestInterface, Types of parameters in the anonymous inner class are already available in the interface as well. so it’s redundant.</p>\n<pre><code class=\"language-java\">AddInterface testObj = n̶e̶w̶ ̶A̶d̶d̶I̶n̶t̶e̶r̶f̶a̶c̶e̶(̶)̶ ̶{̶\n      p̶u̶b̶l̶i̶c̶ ̶i̶n̶t̶ ̶a̶d̶d̶(inta,   int   b  ) {\n        return a + b;\n    }\n}̶̵̶;̶̵̶\n</code></pre>\n<p>Also, class files are getting generating for an anonymous inner class.</p>\n<p>So Java developers consider these problems and introduced lambda expressions.</p>\n<h3 id=\"lambda-expressions\"><a href=\"#lambda-expressions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lambda expressions:</h3>\n<h4 id=\"syntax\"><a href=\"#syntax\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Syntax:</h4>\n<p><em>parameters -> expressions</em></p>\n<h4 id=\"example-1-1\"><a href=\"#example-1-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example 1:</h4>\n<h4 id=\"before-lambda\"><a href=\"#before-lambda\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Before lambda:</h4>\n<pre><code class=\"language-java\">Runnable runnableObj = n̶̵̶e̶̵̶w̶̵̶ ̶R̶̵̶u̶̵̶n̶̵̶n̶̵̶a̶̵̶b̶̵̶l̶̵̶e̶̵̶(̶̵̶)̶̵̶ ̶̵̶{̶̵̶\n    p̶u̶b̶l̶i̶c̶ ̶v̶o̶i̶d̶ ̶r̶u̶n̶(̶)̶ ̶{̶\n        System.out.println(\"I am executed\");\n    }̵\n}̶̵̶\n</code></pre>\n<h4 id=\"after-lambda\"><a href=\"#after-lambda\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>After Lambda:</h4>\n<pre><code class=\"language-java\">Runnable runnableObj = () -> {\n System.out.println(\"I am executed\");\n};\n</code></pre>\n<p>If lambda expression contains single-line expressions, we even don’t need curly braces.</p>\n<p>so finally,</p>\n<pre><code class=\"language-java\">Runnable runnableObj = () -> System.out.println(\"I am executed\");\n</code></pre>\n<p>Final code will be,</p>\n<pre><code class=\"language-java\">public class AfterLambda {\n public static void main(String args[]) {\n Runnable runnableObj = () -> System.out.println(\"I am executed\");\n Thread t = new Thread(runnableObj);\n t.start();\n }\n}\n</code></pre>\n<p>We can pass lambda expression directly into the Thread class parameter as well like below,</p>\n<pre><code class=\"language-java\">public class AfterLambda {\n public static void main(String args[]) {\n Thread t = new Thread(() -> System.out.println(\"I am executed\"));\n t.start();\n }\n}\n</code></pre>\n<h4 id=\"example-2-with-parameters\"><a href=\"#example-2-with-parameters\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example 2 (With Parameters):</h4>\n<h4 id=\"before-lambda-1\"><a href=\"#before-lambda-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Before Lambda:</h4>\n<pre><code class=\"language-java\">interface AddInterface {\n public int add(int a, int  b);\n}\n</code></pre>\n<p>Anonymous inner class will be,</p>\n<pre><code class=\"language-java\">AddInterface testObj = n̶e̶w̶ ̶A̶d̶d̶I̶n̶t̶e̶r̶f̶a̶c̶e̶(̶)̶ ̶{̶\n      p̶u̶b̶l̶i̶c̶ ̶i̶n̶t̶ ̶a̶d̶d̶ (inta,   int   b  ) {\n        return a + b;\n    }\n}̶̵̶;̶̵̶\n</code></pre>\n<h4 id=\"after-lambda-1\"><a href=\"#after-lambda-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>After Lambda:</h4>\n<pre><code class=\"language-java\">AddInterface testObj = (int a, int b)-> return a + b;\n</code></pre>\n<p>Here, type of the parameters are already known in the interface declaration, so we can remove types of the parameters as well,</p>\n<pre><code class=\"language-java\">AddInterface testObj = (a, b) -> return a + b;\n</code></pre>\n<p>even we don’t need a return keyword if its a single statement.</p>\n<pre><code class=\"language-java\">AddInterface testObj = (a, b) -> a + b;\n</code></pre>\n<p>Finally, code will be,</p>\n<pre><code class=\"language-java\">public class AfterLambda {\n public static void main(String args[]) {\n AddInterface testObj = (a, b) -> a + b;\n System.out.println(testObj.add(10, 20)); //30\n }\n}\n</code></pre>\n<h3 id=\"an-important-rule-of-lambda-expression-and-functional-interface\"><a href=\"#an-important-rule-of-lambda-expression-and-functional-interface\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>An important rule of lambda expression and Functional interface:</h3>\n<p><strong><em>Lambda expressions can be created only for the interface which contains only one method declaration,</em></strong></p>\n<p>In this article we also created lambda expressions which accept this rule, we cannot use a lambda expression if the interface has <strong>two or more method declarations</strong>.</p>\n<p>we know the Runnable interface, which only contains one <strong>run()</strong> method declaration.</p>\n<p>Another one of our own interface AddInterface, which also contains only one unimplemented method named add() method.</p>\n<p>In order to mention the interface which should contain only one interface, we mark those interface with @FunctionalInterface annotation. We have already seen this annotation in the internal implementation of the Runnable interface.</p>\n<p>On adding <strong>@FunctionalInterface</strong> above the interface, those interfaces must have only one unimplemented method. <strong>If we break this rule, the java compiler will throw compile-time error as below.</strong></p>\n<p><em>Invalid ‘@FunctionalInterface’ annotation; AddInterface is not a functional interface</em></p>\n<p>In Java8 introduces streams which use functional interface, Let’s see those in detail in another article.</p>\n<p>Happy Programming !!!</p>\n","humanTime":"20 April 2019","datetime":"Sat Apr 20 2019 12:00:00 UTC+00:00","timeToRead":4,"tags":[{"id":"lambda-expressions","title":"lambda-expressions","path":"/tags/lambda-expressions/"}],"category":{"id":"Java","title":"Java","path":"/category/java/","belongsTo":{"totalCount":1,"edges":[{"node":{"title":"A deep dive into the Java lambda expressions","path":"/blog/a-deep-dive-into-the-java-lambda-expressions/"}}]}},"author":[{"id":"kumaravel","name":"Kumaravel","image":{"type":"image","mimeType":"image/png","src":"/geekyturtles-code/assets/static/kumaravel.63b95ba.62b7462775409c8a2ece49d93896682d.png","size":{"width":195,"height":250},"sizes":"(max-width: 195px) 100vw, 195px","srcset":["/geekyturtles-code/assets/static/kumaravel.63b95ba.62b7462775409c8a2ece49d93896682d.png 195w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 195 250' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-acb62cea0c5ba9796bef793e28a4ac1c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-acb62cea0c5ba9796bef793e28a4ac1c)' width='195' height='250' xlink:href='data:image/png%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCABSAEADASIAAhEBAxEB/8QAHQAAAQQDAQEAAAAAAAAAAAAABwAEBggBAgUDCf/EADcQAAEDAgQDBQcCBgMAAAAAAAECAwQAEQUGEiEHEzFBUWFxgQgUFSIykaFCgiMkM0NisVJywf/EABoBAAIDAQEAAAAAAAAAAAAAAAEFAAMEAgb/xAApEQACAgECBAQHAAAAAAAAAAAAAQIDEQQxBSFBcQYSMrEiMzRhgZHB/9oADAMBAAIRAxEAPwC1NKlSJtUIauLS2hSlqCUpFySbAChpmjjNlrBZCmIynsSdTsoxraB%2b47H0vQ29pDiBJ%2bLKy5hzy24ce3vYSbc5wgHSf8QCNu01X5%2ba%2br5krukfpA6UMhLcYJx5y1LeDeKMy8MCiAl5Y5jfqU7j1FqLMSSzLjNSIrqHmHEhSHEKCkqB7QRXznkv%2b5q1P35bqAdj0Pb96M3s6cW3MKxSFlLExzMLku8uM8rZTCldAe9JO3heiAtxSpA0qhBVg1revKWp0RHix/WCFFH/AGtt%2baGQ4KfZ%2by/LzXxHzIllSY6G5roLhBN7GwH4rGG8IJTiRbEWz33bNTxiLIkyMTmNvKE2a4lbjhSAdYT8xA6CmLEbNcZanY%2bLuIbQNWh%2bz2o3tptpFtt738KwSvlJ/C8DSOljFYkssaYbwiwXD0B/EUO4jJTuC6ohCT4Jrh5myqXsyYD8Mj8px2czHc0JsdCnE7j7VNcwSswTYsWNAniK662VLWlsE3HYO6/fvXFw/B8SiO82RLlKfSpJbcLyydexuL9CFdDVddjclNsunSvK60i096zemzWsNoCzdYSAo%2bNt63CrU0EuDa9ZTWtbA2oBYJszYF8AxjmMrKo0pS3U3H0m%2b4/Nc%2bfi8JnDX%2be800sIJ1KNqkvFnFo4gGKwoOzoim33EI3LaFagL92qx28KDa48PGH/AHpSQ842nSlKllOkXv076X31KMsrYa6a1zhz3HUHO2Hv4hhyHVMNBvVqXZQB8N//AGpfBQjMuNQ4sN4hpxWsuo30pG5I%2b1QeYyiQxyZGGMx2U9VGVrCvS%2b1EzgPh0RjB3pTQGvUqOwk9jaSLkeFyB6UaqVKSx0OtRc4QeeoVx03N/OsUr1i9MBOcrMWZsGy3H52N4gxETa4StV1q8kjc0C%2bIXtEttx3omUIiw8oFImyQPk8Uo7/P7VXrFcbnYpIcfmyXXnVm6luKKlH1Ncdd1KVckm1aVXGP3BkLfAfMj87Ps%2bDjD7ks4yyeYt5ZUpbiSVC5PbYq/FE/NnDx6MVy4rjrbKt%2beyL2Hcodn%2bqrFlbElYLmXDcRQopMZ9DhINjYHcfa9X3axRrC8IfnS3Erw9pkvlz/AACdX5FU3UqyOdmi%2bm91vGMoCWWcjTcXnJje%2bOSkjdaijShA71d/l212uMeNO8NpuS2suLS2YzUnUhYuHUkt6tY8Tf16dKmvBvN7eYoc2O6yyxMbWXwlpASFtqO2w7U9D6UCvajxHn8TWIwJIiwUp69qlE1zoK02pN5O%2bIOcZOuSxgMOT%2bN2W8bLTGKFeDzF7fxzqZUfBY6fuAooMutvtIdYcQ40sXStCgpKh4Eda%2beSX/l7rHapTlHPmO5YeBwjEnmG7/M0TqbV5oO1MZaOMvQ8C5WtbkEB3t31kJupw%2bVePMCHEFYBT206KUpN0kgHuO1VRWS1sbOJsQattkXMrDnA2DimJL5zcRoxXGyd1rQSEJPn8npVTnRqTUvyhmCUMsycvav5RUtMy1/1BBTby6H0qq%2bbqrlJdC/SVK%2b6Nb2bCdwkxpGC50juy1paYdQR3ITrO4Ph0t3VAeOeIe/cU8ac1agytLIPkLn/AGa6wUlLDbvalNqGU59UiTIecUpanHFKJUbk71j4ZY5Zi%2bnMb8e08YONi68v0eK123FOWAVKG9c4oKiUlRNulekQFLqSronpTmEnk821yPB2nDO8du//ABpUqzw3Za9jdf0U/wArbYkbd1KlVWr%2bVLs/Y06D6ivuvcm8hSvh6tz0PbQ1/sjypUqwcJ9UuyHfiLav8/wwPrHkK9E/R%2b4UqVO47nl3sf/Z' /%3e%3c/svg%3e"},"path":"/author/kumaravel/"}]},"previous":{"title":"Learn Hoisting in Javascript","excerpt":"Hoisting is declaring all the functions and variable at the top of the program before execution.","image":{"type":"image","mimeType":"image/png","src":"/geekyturtles-code/assets/static/cover.4250cd3.9b503c106e046461933fde6c46d90f52.png","size":{"width":800,"height":450},"sizes":"(max-width: 800px) 100vw, 800px","srcset":["/geekyturtles-code/assets/static/cover.1b91758.9b503c106e046461933fde6c46d90f52.png 480w","/geekyturtles-code/assets/static/cover.4250cd3.9b503c106e046461933fde6c46d90f52.png 800w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 800 450' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-a2f4001d3f98b9f1cd29dcefb7966a54'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-a2f4001d3f98b9f1cd29dcefb7966a54)' width='800' height='450' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAkCAYAAAA5DDySAAAACXBIWXMAAAsSAAALEgHS3X78AAAQGElEQVRo3r1a6W9VxxV/H1spScNivLx93zfbz/vO825jQ9hbSJM2G0sIBNKsIhACCWmiJKXZqqrql0pV/5wmmB2MMRhMUFWp7ZMi3dPfOTNz330OpE0q9cPPM/femXlzzpx97CqmpxebMxvuFtNTy4XkxHIxNaUxjefJ5QL30woYt9ycBjIzyy2ZWbybXk7HytLKN7yXb9mNChnGjL1WM4/T85vTM/K9NbtJjbPH8zv13qCU27zcltuyXMpuFnDfifb81uX2gsE2eZbxmMeQ9TKbZI%2byV6AomFp25RKj32QTw5SNl22kY%2buBIUpHBykFSF%2bw3kYGcxKRfvK7i5QI91GG58XVPO5n9Dqp6BCl9NxsfIRyyTGFhOrnU5OCQprbCd2fImyQiplpwqapNTursVFQyj4GbKFSbgu15bdSR34bdRS2V4HnttxWKuXVGDAB8zbJGjgQYIOsy7/hiod7/xULdVM83GPFQz1WNNhlST/ca%2bG9tOq5B89dCkFue6xIoMPyuQtW0NuKd91WNNCp5/RZYIqsFcE7tWavlYwOODBogTkWGGOl42ULhwCMAKMWGKMxboEpViE1aeG0NKYtSJAFCQQ2Wq3ZxywQaOHELZy8gPv8jr%2bBcIybwZwNCmnGtKzDcAW8LRVvU44Ay9uYJQ/gc%2bflZLnvbcrjuUB%2bT5Ewlnx4DniaKeRvk%2bcwt3gOeDWk30IhX4mCaMEc/dxGYASBIWg7CQwkxfhekSAwBRi0JSUTH4aUjVBWMCrSIm1iTCSlkFISA6YQiJKTbc1sRGtOWYFPmcea8fnUOOWTCrymK%2bhrrQTVBi0/E8Yb97Uq4D2/C4B4ZgATjVPXRHQLmIBkZECIiDMh6LPaJCNKfVj8TQt7IUTyM6sPMyGh5/Jz0jGeVclWHSFcEQ%2bp0MQYrFCbGkzp7xMyL5sYq2Ekr%2bMK%2bUuVsL8dJ9lu8SkxAxTabCbwKfIYPkFGIqJOjPVbiAIRwgQmAq3atNHxCflBdaLDsBNlmRsXhvUKmFAmPq4Zwc9mfiHNp80nzS2f2qgQY9YuaPuhMKUkgnVcTn5KMUlOfEITP1IjSUoCQDDE3mKxN%2bIb9ndA/LOiCkF5blfA9ygYE4M0xALtFAdiGhH5VsK7DnlOQsTTzKxQF8WDHWh78K1T3qVBaIaZxS0YkgNj8mBSHhvMJ8pUSJapmBqm5tSIoCU9JihlJ9COUwuYUQRhzQwQwijq0xaCdSuMMiKfGKs5GGaWCyJdiamTtZSOQsShozCIot9K7DtFLHlcINxPDcEeasL3hkAX0EmNwS7d70K/W6NH0ODouzG3Ueb2kic8QD5ITxCbCmJz3A9gc1GcXCy7gSLYXBReIARCuRXgXTw7QzGcsIzBCUdwwuEkgH4a/aJWC1vvhQlgAIs/Tt62L%2bypIJEuGCJRgRBUgE%2bdGcCMiImOd8mps64mIZ4%2bnO5soEgH/GnaFyzQXn9GsF/39/hTaNO0N5AFcrSPEcxLuwfv96P/nC9Fe3xpmcPPjOdDRcELkWY6GG2lQ7F2ejHeQYcTXXjXIuD3qm3RY0poS2jb0LbREfTHE0OaCSwNSh0MmBmsGnmHlIgRhA5W%2bIQh%2bqICbOyM3gsg7qwSEaAJzPjUG6R73rV0xbuO5h247qt9/n6ouy%2buPeD9yjFXgdueNXQoDIMdh3hDmjKxYQGfOOu8MaSqP6ylYFipgJy4igFEAsQAsvvytAiYIWE8N3rb6CNvWIj90tdAc054Vzz/H/GVrxFMWEfPh3FgYEBOgrWyI3AzQdmAQBnaQYELrqyirDEHL/0OlzQgFtqoQgyMcUNFfuOL0A0w4Cx%2b%2bNx9cN7feN/3Am/9A9%2bd933HvO/6DfTngHlfPdQBxpf9f1rpv4o4lQfK6piCGSEeTDzPALnwp8KGDvpvpbQr4g/KYo6Kq2MVScCiB9E/44/SDc9aOosTP%2beuo3ONa7B59D11NNewiubqfkLn0J7zrFPEmbZxtRpn3mnIO16nYbVqzXhG01r1Ha18YzStobl1j9rzuX8Wc6%2bufYgOhktgAEJmHUJX3eGkbQfEIOpgiBnigrWvNNUnqXFdgsNb4ZYEIhLPD0uw01AXIw/GeIO99Ek4RYtxP50NuOliKkKXihnZ7IVYgC53lejq8ABd7mylCxEfnQ80qTbkoUuteUUw3p0P413YK3OYqIvJiMy5mI7ShXiQzgfdgkuFtKx9MZfAtxhdSITwLkVXBntkXQb/3sWOFloaG6QXC%2bspmoTR066PCcxw/mEHUWMSRxgXyLGDC1a%2b4mnMkLshZXEYa1yE0pP1EgMwg3wcEwR66PNCB93bvY0ujw7R0isv0e2jr9H87CQtvfoSLezeSXc/fJ9uHTlIi3uephuP/5SuTY7QzX3PyvPcmofoUqlgP89vnBaJmZ%2bdottvvEo39z9HN57YRQs7ttDCzi10562jdKW3g5Zee5mu9HXS7eNH6frmWfr6i09p8Zlf0I0nd9Hy6VN0%2b91T9I/Pz9DLw9spFgdhIJLDaBNcOSFqLsFaWQVCIF7cIIi3OAhiwhkmSuN4XQVGJWpoKNAnpW765k9/pKVTJ%2bj69s2y4Zt7nxGCLmbidG1sPTbdLs/MjMXnnqKlXx2W02Zi%2bcSWXj5My%2b%2bfputbN4EpD9OFZJgWfrad7mBNZt6tQ8%2bDuN1073ef0fVtm8DInTQ/MymM5t/4%2bsxH%2bO3HaPHZX9LyuydpfudWWpoo04GmDEVzs8IAFf6O6ShUZacpnZ0yA2IhlYO4kOhUuMOBkM4JVHobK4sLYaOhXGIzrVkVo883bqV/Hn%2bDFo8ckk0uvXKEFrDBK91tdPOFffZGF596gu6cPC64hbF33nqT5upX4XQ3y%2bnx6bIknH3kR3K6S6%2b/Qvf%2b8HuRguV33pb5f/vLn9V6G8bp60/PQOWidOvgfrr70Qd0dahXpIaZcAGqcvfxHbSvKUFh6DxHhSY3KNj5wHhV/wGmiyUCXqCrwnrOcYBWBQl%2b0ja3%2biUD9HvytGZtkj5bP053%2bjvo0mCvbJQ3Nz89RrePvUELu3aIyF7p76L5TRtE/FlC7rxzQlTl7KM/FgmZn5mQE782MSzGjwlZ2LWdrvS009VyP1RpB0R9hi63FWX%2b7aOvy9p3ThwTBvJcZtD1LbN03ttIF4s5ujXUTXs9KfLHRyWkVpZf%2bX2mRaLD9KSdOJn6gwuiX%2bHgh3N7ZoREgjpNNR6B%2bxF4iia4wd/6Y8oNeurFUImFhnG7EPXXWnCG9hJivNhY8ljzzXgC9NlIGg9hrL7zWdZmb4Nx3Cpj6qY59xq6Fk7QtVCKrrpX0YFIifyQ3AToYDfHdsBknezKmSmsFkwXHy4zB8lQqcJ5PKfDEvcHO%2b2sr5rxcXUIsTv0RuIAr44DtBs7v6K/Esp91RJV890wwvnOMEMz61u/gfdzHAmGYHfCGbrqWU0vICQOIevL61qCpMCwB8qm9YlXiIMGptdktyoZwomHRQK6uDIkho%2blQdJesZhDEgfUQRU%2b9ARoUQdC578n7kv8fd7953XWCeE3kRcsIW%2b4EoyBAWsgAUjbJRcYrzGCJvhhRpiiDAd4LBkunHxFh8CWsfw8gDmlKjZ9qtiBMfUIiz/2hpQKeP/LDTsI/CHEPoiRF3xNdNHvQeuWcJjzgv2hZmSX4xIHqCrSuM0EVgnj4WwmMANYAljsw4F2y4g%2bE80fjRvkEhYzwI1JHwdiksD8FaErS4ETXxl4/wf4Hoya35Hx9YIvsZfL2NOBaDvSY1h%2bMX7VUlq1EDIiKsHukOlk9%2b7CoIqq0gxyUVTqACYfYClQTIARgX2ohzv8wuOnv3tX0wIywkUGRE%2bA/k1BHd2ChPwQ3PTVyfwq1tb0FzVkrPmOOWyT7sEGHA4jeYMEGC9gcgDjETIrvAPHBq5kZLCSikrGZGV12Gg4V6gpLMB6YsLTkXb6MJShd4D3wnn6daRI70UKdDqco1OBFJ3wRem4JwQE6Zhb4ThDv3uzyW/jGHBcf38L3094I/Q25p/0x%2blUMEnvBNN0MpDAuqrPv3E6nMXYsLzj/glvlN7G%2bA%2bwn9koDooJ5LK9LnxIfVJqlP1S3FH1RhUYcazjQphbcTekCTGA5dFVYakM6%2bqvKYiwRPCEqFRwJkXXfMi3uQ3gHVd02Af7YyPkDg9QY6iP6gNdtNbXTqthO1a5m%2bnRpiI9Up%2bmhxFaP1yfoofWJekn%2bK06jKkPdMucJrvi1CfPjVw9gifi3wpJ5Wda1l/rLck4T2RQ5njx%2b3EhWqfBck9RVkVWgNXa7y6IkXemyBIKSxncU7T8Uv0tCLx4xyVxT2NOGOJGkMSBEucEISzE9b4EbEMSC2ai/QKu67EBKrAL4sIm8m2u%2baXYuCK%2bMPVDnpfgFBvMjfMaYHCKNwavw%2b9lXazP77nN4tSyWI/XVYD4cmUZY1N6DPfVpY7O/WODNqFG9NmjqdpHtzpQVgEQXwn6pKaPXIALoLCkvhYBM4TvBJgR%2bu7ABksI24iMg8smzzYGx3DeFFqiOq/g0NqU102xVbyPjkFqy%2bb9NgHVe4IRu/BpolVeQ2qXei9K9Afs0nrKvrFSaiHBHnuBgLdQYcKdDFCXHEWNZgcTauEBI/iHVfpc9bWmxm%2bMkIiibLRP1IrD7ZBUogvCTAm65H6gX20OjGAG8XjJSvWFScqxprFTKUeBg4liXTcEq6qPUQEV2dr6r1VFGKBOnBngJJxREIawJDgJ540biDSglZPTP8obirJo6g1Xa3EquWIRNAzhvn0rpNNwNlYJ2ex6mxin3mZiZVu0TZXXPukVJ5/Uzyo17pW%2brBVV6yAUbq5owi1z4lU1aLZRlYJCDQN87ipz2MBwqunMvzmilB/V%2bqk8zZgjUSnbN0KyYcwP850CWnNKTGDacWq1ul22GaBuoAzDqpe5KqSvSoOsF9NeAFlehTM9xQAwwue459NSwKhKQe4%2bUpCXSxQW65jcJ7Tra7M%2bO45Q0gAGJLgeX9b9EXGv%2bdRYVc/jI7bvNgQasXXeThsCzRylZlXDZxiaMVKjGVW9ZlMHACOYEwbA8lvGAyjkHdCeQRPPLXsH2xZIGp0W/WaRVneHXZpwtrw9lEsNUXlwBw0P7qTxkV001LeNxod309TYz2l6/Enq69xiE6%2bit%2bqtTvVKfdS%2b1srZ0d6IrV7VAGekJhCSazB9O2TfC%2bj7QkiAYUDeqhKe08jbz2CUnLIzVlBQxJs6grLeKoI0d4gqpYa7TChLXMiMUmdphrrbNgKbpG0tTOrb4SH7brFq7EwhY8K%2b57MvR5MTNUSpMRP3JTZnh8aGGeNKApg4wKo99W/DEOvRMYEiXIGDDHXl3WOX0wzxcq0myVWvEFllEvLyCBsuBSPupmbv1FsV3Ky3TzbtUAmT52edJXAjTbZUDNe4bKMeLgQ2FQ5uAIsZ8SDi%2bdtKohlNiOhYJUzRwRC20vra/wsgN8j9NnMUUWVbR5WBclh%2b858m2rA5/bxxueY6XRnDWi%2bQcQRG5jfVd8XkfwNLZXjhiTvmtQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"},"path":"/blog/learn-hoisting-in-javascript/","timeToRead":1,"category":{"id":"JavaScript","title":"JavaScript"},"author":[{"id":"eswariboopathikumar","name":"Eswari Jayakumar","image":{"type":"image","mimeType":"image/png","src":"/geekyturtles-code/assets/static/eswariboopathikumar.6370538.8dd1692a41872507330a722c7ec399b8.png","size":{"width":60,"height":64},"sizes":"(max-width: 60px) 100vw, 60px","srcset":["/geekyturtles-code/assets/static/eswariboopathikumar.6370538.8dd1692a41872507330a722c7ec399b8.png 60w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 60 64' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-1bb70da44d6073cb51a7611c0b2387ad'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-1bb70da44d6073cb51a7611c0b2387ad)' width='60' height='64' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAABECAYAAAAx%2bDPIAAAACXBIWXMAAAsSAAALEgHS3X78AAATcUlEQVR42t1aB1hVx7beYG7yEhMrSLcbFbDE5EaDJragNMWCMdJRUSw0KZZo5BqjsdAEjfo0N%2bWaLyYaAbsxGhUTjYWqoFgBawIKInDarLfWzN6HA5obTAF8%2b/vWN3P2nj2z1r/%2btWbNOUeS/sbLtvPLkr2FCe/bW7YzptaufQcrO2vLVXZWFnkoahQNSj7ei7Vr37694Vh78zbSU331avucMN7KXBhvY%2b1oZ2Ve2tvaAnpZmYO9pRkX6tM9fFZmZ2PlKkAwM5b%2bP1x21lZGwvPtO6CB5WQstioUHQqThfoq%2bVmVnY1NV8N3n17jkdHoyWbCGMvoPsLLKnvhfcV4Rn17GRg%2bxtryfZkFzZ5uAGxsamLf2iJWprmGA0CGixbs5D49E2MskjkAFqZPZxj06GanT37ozWfkdhwZh17Vyl4HBQA9CPist2DAu4bv2lu0k3r27P300F650DA9hTsGfGKELEiX41xraLwMgFY8szhuOB/NYduxi8woa8muQ6emTHkrefvrRgwQ1O/Q0QQ9uQgNO4VG3q9LfwNRwqCMQMB3gu06dm5Bc/RuwY03EoBYNE0QFKVsO3WR7M3aynFv5YEG3SFac7EhMWe9rc2hl7XseTkU6DPeZ31wDImcC4pxjukGO4qYF0FoUpd9p2645/%2bP1P2VofrEhUoG9%2bKGm5PRalsLM22n1iasQ8u20LmNCevS1hS6m5mRx3mLnxk%2bB3zOupmaYi7AhGij1AcW2%2by69Hi2FggGodYE9nrLWjGPSvoIj5tDD7N2WjL61U5WzM/Zli0P7g9frRoGx7e4QnbKGMhNG8vb41vc%2bP2FU15lI1/rzMHoamKqI/CIEQjCvnbXQMkzPBx6duvRBIzv2Kk2PW1sXkavVvZB49EIrUMPG1gzdyAr2D8edOd9Aa74AxT4AVxEueBbI/T5Esplf7j38yRIWePI3N7oAh1amTBMjqq%2bNpYIgmWsvD02s%2b3Zj9ZsAgBYmfP4tzdpbiRTf0/f9hbQsZWJetoYeyg%2b8g4jo1meD1RmekFFhic8zPCCh9ivNBD6TPfpuSrHmwPx4KwX%2b3B2f2ICw1zBKKQwGb5mCHhTCQGF%2bi5921uS8do5Xn2ZLs8XxQcqznpyI6uyvKA621vfGgrd4yL36R0OxBV/9smSwdDNtJ2GQsHe2nIbZ4FZK2M8WEm2Xbo3nuG2HTrzaq9Pa7Hd92lveaibSTt4Z2h3TWWWN6hzvRl51dDAuob/FhDUr5RZAVcDWNL8gQyBpZ2kGtfsppwVepm2aPTDDqdin442/e0s%2bXbGslLGMIxrVpHx2x6vDxAGgDCW78tmjOul6Yq7xyudrKPkmuCZRjXetlN3VEIcWPp2tFrZuY0prF0wSIPxi8Z7sj9qfF0QKD8wDKerBz00r3e1hh7mZjs5AG2eN8JCq1G9z1uAb43Q%2bJ/Hv/UyKaxFYfWlfH1BwJxAyVQXH%2bkANi1Minxc%2b7SQ849RYyY/vrjja93MOrY2ffD16uE8aZH3DQF4UjAe9y7mA6Y778OKDk%2bA/t2smXlz0%2b5NAAAR/xYvmvYf1LM93E6fCJpzPowoqxjzMLP%2bQNQ13PBdAoByAe0sXiN6QnOp9QgZAONGrAEsePy/KLV0m%2bxmR3GqI0Wx5UrzbQyLHmof1mMbVPqVMoBUHOFOAtX4DPJ9OQiYXHWRXq/AC1ILD0MdGvy6kzFf6mUj9v9npBfdl8x4nRTWEQNOfu0CUVPsYP60XvBt0hC%2bp8MFP33R81uMUAoiMpbu71w/DN4L6gVzAmzh6H%2bcmBbnJgDm%2bfUDBH0C/94RdbiLujTo9WtGlFSd7Sk9K7WU48%2bo7wcz/8molEVvs21rhsBnHw2ELavfhJme3SHMtyec3u7KQSDj6npcAYKekddz0kZzAKdPfBk%2bWzEIvlg5CL6MfYtvh/iczfPvh4eCZ/vTys9LLY1V2ZO4Tg12abPH8Xb/Rmc5/oxfSpw3uJioj0rqMFmJ2r6AyllP2LTUASa5dYLVc1%2bDbDROobi%2b%2bpPl/G53WLPwdfAc1QnWLe4P9069y%2beguTD2iR2MQuqb%2bJHlGHhmtPI3cY7NDHVqsOthlj/3/r0zgZ1VuT6nbh%2bfrK3I8Ma9nycrfRWnzkUwrk%2bGvD3uEIsApK4b9ljjKdb3bXobVka9Cqe3Cbbw3JFRq4zm8987NUVXkemfUZkdwHeCyiy/hk2EFZlTJDg3VBKL%2b%2b6D4ilQdGS69mGmDymIygoDyQBS/uwONyg5id68EvCbIUAtMQgKp%2bBBKABUlAQRBIx7g5xB471Y4Q/TtXB1GlTn%2bBzmdUiBFdepwS40mrdlZ6c2R8VKqrN9oODALNwBhIKkaKWczLbGvwUTnDrymL774zsclLpJUBEyNv1LJ1g8uw9ET7WH9TED4OaxCZxFYow3U%2bV4wdWDM9n90/44l1f5/TNTW8k6NVw9gEby9sFZn%2baqbK/S6mw/yN8Tontw1lfPAA4AejB%2b/j9hzHAb8B/bFQoPewDlh8rM2ttgpSh1ISt1FA%2bTY1uceD7YhbtAGoaMpgYADvClA7NYyYlABMbzQdlpv1ayTg0HACrC23un/JurcjxLys9OhnM7Q3WoDHlFHwKk%2bI2jE3gSJKNqDPF6pAZQIzNup78j9n9KfLQjYMIzrAvEe16QtzuE3U4Pwvk8y0tOBrSSdWp4BpScmNwcvVBaejIQclLDdaU/ByBFPWVP1YCgGKR4sS71edKUxyrVo1Iz1IDEvY/jvBmCzYp%2bmCkYcKoRGIBZl7fXjoQ/r871unP3x%2bmQuWOO7tefJjN1jidTjNSXtBlCxH1vHtOaOmIQ53XES38fww0ozM4j264fmg1V2T73KjKnviTr1HAAPMgMlLQ5Hnzr0ZzzXl%2bVFQJnt0eo7xyfSl5hireqDDyH94HYQf1b6RNw1xiH4TGeSzH2b6V78GcUQmJsDRhKXqF7lPxyU8M0d4%2bHw8Msv82kQ%2blPk4xIp4beCo3EUbhtsyvfzTp4ae9cuHl0mlYJAUXoc0WGL9xGcAoPB1EGx2QXCGe2%2b2F16AGnto3F1huyUqYCzgPXDwVh5g9EQ0U%2bqTZgBc7FSk8G6C7uiYD83SEFv56Zyel/49jMhj0RKiFwYW/IP6jN2BExt/jQAvTkdDUxgLZDQXVP%2bOUnLIJ2h1KOgJyUcPIe5O0Mh7xdczBxhsG5tFDep3v0TBl3Li0M56O9XiQ%2bmpPmxqSnvXogGrJTw/dxBxSONkpZH6PXqUGuu2ei%2bIIZ30bwMjQrNXzy5f1RcHFvMFaDPkwjU/hWeiDkpoVxYzBuZQlDQ0Mhe0cotuFcRD%2b09jgEhoC4dmgGJT7K%2bBwM/Kwp%2bn4enhfCPqW1r%2b6Z1Sx9%2bzzUKbqBT4OnF0hndkTwPHBye1S/8zuFoRf2BLMbR6dxqpNHz8tG0TP%2beWcIIHPg1rFQoHE3j03F7S8ECvaFIBNCHgGMGFGwbzaFF1zG/Z/iv/D7aMhMmRMpg9943wtmpETw2Dv29bzmqGhhwd45pLxOUD3cwOsCgBtHA3GL8wP6svSLlQMh3L87hPp2h38vd%2bCHJqzm5JAJqQUCDw0RPrQDsAt75sDpbyMd5PAzLtw/s3EA%2bGlbtFRxJICDgADsIM%2bgghpDwxUDsHpDCntiJegNKyL7wcB%2bpuDoYAGOAy14f2lYX3lLnMRjP0cGsHb4hGICDCeW3DmxLbo1rYtMMPpq84eNA8BnGz%2bSSr4PFHkgZc4nNw7PJYU1hl7nNEbvXTkYhAWRL5zY6gpv9DWBoQPMhfQ3h2HY9u9jgtWiMx9zK31KLQadqwkj3eV9EZQA83Z9EfMCrfvz9qjG%2b07w2NfzpbsHA41lBnxVdCiaA4DClJygNwDjW53rjzX%2bKEh%2bvz98suwNlAFc/r38DViL97LTRuH5wQcu7Zfzh5w0FSEAKMwwAV7/advcFiIM5zQeAEe3zpduHAhSAPiy%2bJDCAEXpGu%2bRR3kYZNMPoL4YCgFQfiYIyk7PQGDwCHzJl75QhaIfpuuNP2cAAIGqAIAhcBVD4CUlBBoNAI/52yRU6hk5BJYVYwhQDlAY8CgIYTzTX8VwOL8rGLK%2bDYOsHbT3h/IQubh3tp763Pi0sLoM0F77Loryw1HDPNSoF1KQ54CzOyLGX94fyROV7C0RBnVAoJYSXO09P0yuCWo8X/O8hgEELrEMc8A6WjN/V8gzqZ/HNJ7xWzYvI8ONZE90QGpW5u3S01XPgrogGCa3R%2b7R2LTQR4yXAcAqMApwTU9D8Bv1OvFNtASnx/I%2bZvsjhQejyQiRB%2bpQ%2bA9JmhCcU3dhN68vKn7cNtdSZp3RD1vnNy4AByWQznwfwj1x8kDYxIKDEXA%2bNUxHZ/bzeg//WeP5XNprh6IgY0/YRlrr0olpxsc/X9A0/iBxP2AF3wkejk4afHkD1un7gwkE9rhE9qQAyHOw3L0h2sKUeXAjahmnf1HM4sal/zm/D6UL0hBJ7bGO54BfAteZsJEJhTAmAQo%2bjdLl7gkhEPTZ/ImZkGbwLrU7wnWqySsB3k4oKglM4v%2bTU3usNbpGuvgsbTjDS6M%2blqqcVoufxWdvlkocl/P/xOvck6aC%2b8cAw%2bI1Dz1XQO5OTFq7UPGUWlT%2b72AYjOGSKiT7u2C4G7EEYHCCBtzXg2500mz%2blZzjsufYjP8VR3THVVy3v5fqQRsk6C7Q1ngk6X%2bMmL8k%2bLky5xW7wHUtMOdYDYLAfgn/gOUgADn78WCzu2a7O1dnS1RqhbrG0zu5eELMPhAChSsWMjYijjGnWC24JkO584oDse%2bFvaCsrxm/husCbd6Xyqeu/3uM14xKlEDu60bGNhPfBoFU4BITljN47u2bQ2IAnOJ0bGQsoKIMQYAHvh/B9dXvQf6WSH7MzU0z3OIeL/zYjMbnb42AK2vnQ%2bmspQCOcQAjOQB8jVtDYwDXvFvgvDgSdeAhyBxX63OC1i3hL/Z84AZ9X%2bcSxyu/Mu/kl8E98YQOlcobiBXgoLm6KscVqGA8QxAYMgFgeDwX3Yg4uBe6FC4cCIZcOtbK3wzVEryXswOrQPT6nQX/Ao1LrDAcgQQnGVSnOFY9YiXk4VrncU10BKAOp8u9kmw5CC5xehDKgv6icKictFaCDouE8a7CeJXHmuE61/gH4JJMHlHfGBKjy3SIhGtvLeRKogBngrMQIEWHJEDVuki4m%2bMLhd8HQcHeYLiA536SiyjXvpsJt7L8oWI9OnVIIgCCRh7ncwjPk7DrgxcxWqt4yGIdrU066Fziq9RjE104CM5CR5Bmc93/3Lc%2bizZLOrd4kfBk2mtGJ45gSENwTiTF1IpiSEuW5RDJCge/ryiLypMRsiEj47hoNkRAdZ4nVF98F6rzJwnhfU/QbAoHcBbj%2bDvyHGK%2beCga8j7QGhhunGUg5laDcwIfoxmd4MZ1dRS64rt/8utvf5FQNGMS%2bIRV7yYPwBDQgFMCKaeRPS17PR7K3l4G%2bYPmwZW3FoLKEbesoauQxrE1IJBXhyaAJmgpqNYjEKkzoDptBqgQFM3MD4ANSxBjZONhRCyfQ41zXR28kM99f/gyDgatWQMC6YKh5oIh8m7Sm4Y6l0/e8MeML58mjK/0TOZJpjR0YxtkQyE4r3nEeE53ojkpgcrfHRwDV5z%2bBbejPgO1e6IwRCiNHiajEnhIwDBZqE/39FSP52GDHoU70Z/DFeclcAfn1DmJeWrWqwMC6oaheev%2bzPXtuMMmJRv9if1%2brVQQnybBgGXiBxD3hM/A7WNaSC0vqI91fcxTnyiLXteOS4Kb14ugODUdyt6IgaqRq0A7crUcGrGPFXpGY6qcVuE7i6H4myNws/gGaCYk8zlFeMTWWrOWLqQb6oi6fsVD4ZUPjDO2HkZb1j2Z8beWi%2bJCNSHRWFA/aRC4JpJXdHwxGXV9rBsqReK4GtjYZKi6UwpVmVdBM/BDqEajVJjB1SNWgQaNJEPpHcrk9JmEntEYGqtxWApVPxdAVUkZMA%2bsL95eJcKiznp6oZ1H6KYD1ySonpg0XCTsxCf/8wRIi6RrmzdJ0GU5f1nrnpDKixyF%2bjLidUXUAMQAAiAJKm7/CpWnCgDe/AjAJQEe985jhcYOWg6VP%2bZDxa/3OAAgA/CI4craNSzQkK5a9/i93JaWS4wub9n8hD98LNgkqd4RyFX6JvXE5KKGkWKR3zLeQBEDAEqg8vQlBGA5MJea2P1dwbEwcBkCcOERAH5nbZkFcZQQdZXeSX0UJpNNT3RhwuNZVD0%2bMYriCqmlqY/3/hsA9WXAHwXAIBw0pLN6XOIieTt8spNjYfynEvSS6T8qfr9Mf23d2G%2bSAIhcwM8MWrf4H3gYdPjAiGyq/z/AfMX2UTJnY0uk0hVR9MTpfo/%2bTQEAOQx4oYa6F92ftb6toU31upTsX%2b25pgeWv9VK/DdoCAxCAI5jEvylVAZgdb1DQJ8HXOM01ZPW9Da0qV6XWt46qieuGQCjk4lW2gYHgBhw6hJUlD8ANmGdYIDzkwCAR2f3taCamDhYtqn%2beQAPFyL%2bXeMdwG2tAgA0KAD4jmrLcajEWoAbrmyx9dWBJ8J1VBkOlW2qPwD4srHcOlAyqW8C/MsAEAbwElo5E%2bjv1T8R8noA%2b0MND3P1uvBlY7l1kCdp0BBQvM0M%2bk/IAKYwAPtDZVseC8D/AV3ZB5bgY9sGAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"},"path":"/author/eswari-jayakumar/"}]},"next":{"title":"Cross-domain communication using window.postMessage()","excerpt":"Learn how to communicate between two web pages of different origin.","image":{"type":"image","mimeType":"image/png","src":"/geekyturtles-code/assets/static/cover.4250cd3.9fcda2394282adcfc9637c55da5200b1.png","size":{"width":800,"height":450},"sizes":"(max-width: 800px) 100vw, 800px","srcset":["/geekyturtles-code/assets/static/cover.1b91758.9fcda2394282adcfc9637c55da5200b1.png 480w","/geekyturtles-code/assets/static/cover.4250cd3.9fcda2394282adcfc9637c55da5200b1.png 800w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 800 450' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-112647161491133aa92be354bbd4c85d'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-112647161491133aa92be354bbd4c85d)' width='800' height='450' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAkCAYAAAA5DDySAAAACXBIWXMAAAsSAAALEgHS3X78AAAVzElEQVRo3k1aZ5NV1bbtP/GqkNB0zn1yzvl0IjbQdEPnAI2ABIEmS1AkJyUoKKigGFAuIIqKAbXUvvdqidZ97355alnWu6Xf/Hqq5htjrn1aPqzae6%2b9z95rpjHmnOuU2F0ucQX94vT5xIURjEUlEAmJK%2bAXbzAgvlBQvDiPxBPiD0f0nj8YklA0Kn7cS6RTEsZ5BL8L4l48EZMozjO5jMTiMUkmEzqXTPEYl3xrzsynkpJImrlUJi25XA6/i0gC83HMx/hsS16veZ5IpXDkvaRkW/NYV0DKKiqkvKJM6morpLa2UurrqqWmulxHdVW5VFWWSU1NhQ6eV2JUYb6icnahqmo2nquYLGl2OsTh84rD4xan1y2BqBHS4/dBAUEIHVJBY/hwCPfCWGQoGpZoMg6lRCWdy%2bJeAorgQmMQJqXC5VtbJIW5bDaLY0qyUEgmm5b2jjZ9JovfUUnpbEZy%2bZy0trWqsJks59L6DOf0HO9JZc17%2bZ0s3h2HQpM49waC0gQZ7B4PjBaQZqdT7G4Xrr1ic7nFDeN6gmFxeH06PJDJ5Q8UfJGIRNOZyRK7G4LjJQ6vBwMKwA1fJCxueIMHL/RBAT78KAoheY/K8cEjQjgP4h4XHYZCqIwQfheHYqI4pyAxeEIC17F41LJ2DFbNTV0nEgm1NgWhQtQD9DnjAZwz3hCFwEm8NwZlxyUNhYXxbn/QJ52dc2XrxEbZsnm9TFhHPd%2bC8y0b9N62icdlK8634XzH1o2yfWJjYc/uCdm9Y/NkCa3uhSDuAAWGYPh4KBZT9/eHw7B2DK4dkTjcNByHcFgYPSGC5yJYUAaLMR6QsjwgrUrJQtCEWimlQqUxz/MWWtq6TlkjA0HzrdY8FJeynlUv4jneY95rvpNraVFlVNdWi8vRKHPb0tKWT0hbLiG5VETSiaAkY/DaiE9HOOiRgNcpPo9dvBguZ3PB7WwWj9s2WeKFe/shMIUN0IIZWC6dViWowBAmwoXl6XZYDO7TGgnrmIdASSyOoUAXzSCWKURre5u6L4XTGIeisvmstM%2bZo/ezvMa9XD6vArV1tKtScoh7DQ8804ZwyeJeRp/P6%2b/SCKnW9o6pdTh9fqlrakIYOOHBXml0ODQkmuH%2bPKdnO/0Bsbk9et8Nwzp9gQINHEkmgQEuJx7wI2YAhng4SHCDIrzEAHgE458P08qBcEitr0crBBirYczRIiFc03UjCAkKo66O6yjemYTrMgSoCIJkPB5XMOR9hgnxIYrf8Rn%2bLoJ38h0EvSjO%2bWwkZr6TgiIYAgyNtrkdsqR7iXT1dEtP33Lp6u6S7p6l0r2sG8du6e1fLn2D/Tj2St9ArwwND8jA4EBhbMWIrFw1OlniAAYQ8Z0Q3u33quX9%2bKDPYgEKSzCMweUDoZCCYFBDgzEfUquEHlYAFwrlcN4ImFABiPa8/ksBMTNUMVAALBplqFmKotL4jgS8LqrCJvQbfJbeRuVX11RK57wW2bFlrWxat0I2PbZCNqwZlQ2rh%2bWxVQOyZmW/rF7RJ6tGlsmKoW4ZHeiSkf4uGepdXBgdWMrjZEmTw6YIanMTPREnENLLQQUABKkEDtIQQU5ZAMdILG6sBJeMWOAUxjzjmOCXyRLUYio0wS1FeoNgWYQI71MQWp9K4G/IFGGCqnpMxPKiFIQ211HrPfwmQy4YDooday%2brrJDp06fJzNJZMru8XKbPnCEzZk2X6bNmyiMzZkhpGeYrymXm7FKZhVFWMZvHQhnps7GBCnBobNgQAkYBYaWTuoZ6qW1sUGpstNvERrpEuPhAKzaHXZpsNnGCbujydlw7cc%2bDZ92gUweuGSIUKAwv4ULteIcH96gYF37nRMw68c4IGQffJn5ESL/wRP4mgO8EQwEFVN4PwihOrI8K5Tc9oO4A7i/snC8rxoZlZHRI6NaDQ/0yONgnAzj2w%2b15Pjg0oKHQ27dMent7ZOnSrkJvX4/0D/ZPltiwGArswgvJBD64dxjutmffXjlw8CBAq0N279kjx0%2bexAt6EX9pOXjokJx/7nkZWzkmHXPnyrHjx3H/hCYuu3bvkvPnz0v/wKD4gCPzF8yXU6dPydlzZ2XVqnGESVi2b98uZ8%2belT1790grkH4vvkWgo9Dbtm3TnKG7e6ns2rUTQgZl/Yb1jFvZs%2bcJPBOQ3oE%2bLH5AZpXOkGwyLOMjy%2bHe3TI22KNHuveINUYHOW/ujQ31yIrhZbJyeHlh7figrBrrAwbA%2bh5oVzmfWgb/X3vjddm7fz%2bOb8iRI4fl7XfehkL2yb2PP5Y33nxDrlx5RcZXrZJPP/1EXrn6KsYVOX7iuDz33Hm5%2b8EHsm//Pjl3/pw0NTdJX3%2bffHb/vgyPjMjnn3%2buipyc/EaWdC2RL7/8UjZv3iy//vorrDeGJKld/vzzT2kDsxyHUn/%2b%2bWfxY12ffvaprF6zRv7zn/%2bTzRMTsnHT43Ly1GlpxPvpldU11fDYOmloapSa2lqMGvXgmrpaqW%2boxXPNcPd6qcdoam7gc4VmWxO9lpmgU4VmEsSsMIUY/eHHB0gy/NLa0SGLsdA3r78lp545LRNbJ%2bTb777VxdMdP/nkY1kxPi5fffWV7IfCXFjM3bvvy5VXXlYE53U/FPDWW28hDa2Uq1evym%2b//SbHjh2TadOmyUsvvSTHcf7Rhx/Km1Ds008fkC%2b%2b%2bEK6lnbJuXPn5NatW9IDJL/%2b9nV4VL/cvHVTbt78mzyxZ5c8vmkTBHApCzHxYqjQO5WlEBoeeLMToeMLeJXeCeoMX3oZstsC5QOemUzQDZR3w12ZDiehgH//%2b3%2bUlxkWGx7fKK9duya3b9%2bWRYsXyUcf38OxU5ZgkR9%2b%2bIEcwKJXPfqofP3N13Lx4gUZHR2FF9yVZ888i7y7Unbu3CmXLl3SWL937568//5dtW4DLPQBnjtw4IAcOnwI33hNve3ll6GU48fkwsWL8jcIe%2bzYUXkdHrl5y2bZi5A5hns//fS/0rOsB3jh1ZSYjEAqZjbqxBwTpJkAv9LyWVKG3L8cY3YlBoCvpr5aSisrCuWVpVJdV/NXHkAPIA1SIQcQ4%2b/ceMe4G1z0KSxybOW4XH31qqxZu0aeefYZYMBzigmM7RcvvagCnwQO0MpUxEYorhEgunbtWrl8%2bbLiwvbt22TevHnywgsX1QueQEwv712usU5gnAO8OYf3PYv3k/pWAmOoGHrGuvXrYPXHNal68MMPagwv1ktAJE4QMJ0woN1lh2KcUlo6HYg/SyhoeUWpzC6bLqWzZ0hZ2UzeK5SVzUCoVFohYFmfuQCLIdIiaYlUyPQ4DDoj9TEzo%2bu0ALiY8bngYlzo3HlzNZ8n0ndAiLa2FqUr0htzgzyLHaS6Xp/HpLt49wKAox8eFrcqRq0GQX0ppr14F9NfJkf8FufJEkmtB0ylmcpkTR4BBdD6pMVKxH4qFZU%2bJETVVbOksaFamhurpbG%2bEqNK7M310txcK05bbcFuw3lTLWoBn0F%2bf9hkfG6/XysmapchwBKZJTPjixpmrFFoxhRLYF6HNCNMK%2b3REkTqFggcxJEZnxvW5ZFKSSHN9jLjDNJqSMOZbWIwQeI8OZ/XbhjBj7VErGtmhx4okBkq8wkthjDPmsGt816pABjG4gF4VY/U15ShTgDQ2RrEAcEdtkbm/uJ22TBvagF7M/IAF17oi0RBgSiE8JF9Tz0lR0%2bc0CxsJWL75OnTcvjIUc3hn9i7V2mPi3hs/XoZGRuFG%2b/RxZOf6aJDQ4OKA0x4Nm3epOdPPfWkZocDAwPg6xHZAFrrAMAO4lmC3RbEdwxeRlok6K19bK0cBAUfQigSH4ZHhmXhok45deqUht7g8BCwaZM%2bx0x1PcKttb1VyquroJwgmGe5NNZWaPHjo9BQhAPoT6F9WhQ5ChgsikCDsCpr4xrE6yuI3wOHDsoLiOkXAVxff/ONLAeK37h5Uw4dOSL3QWenwQaNoJufQFETW7fKg%2b%2b/ly0Tm9Vlf/nlF3nyyf3y7ru31XIfffShjI%2bvlN9//13WrFmtgu%2bFEq9cuYK4fhqMcVdWr35Uvv32Ww2NBw%2b%2bV4UsWrRQ/vtf/1JaPQxgvPzSZblz5105AYzZCby48957sn3HDvnjjz9QqwTkEu4vWDhfps2YDm/0aAjU15ar8B5nk3qCy94I66MCdKkXFDxuJG%2bOJrKAS6ulEFzqGwjc0oFqDZUX0fbOnTvyX49Mk4NHj8iboDIq6D64fO/efaDD75ALjCuSk66OQEGkwx07dyjtMQ2mIkhfZItbt2/J7t27AXi75MKF5%2bUawO3ChQsaNosBaBMA3Oug22uvX5Na8Pdrr76qbLP7id147jn55z//odS6YOECzTUmJrZAYQ/gKU9rDpKFx86uqEBYuEC9y6QBHuCFwLS%2bk8Lj6IEHuMwoeOEBUAb7ASiCgohd5NnfgeO7QC8EwZ27dsiNGzdAJWXyKmjw%2bQsX4QWH5cXLl5QF3nzrOlx%2bIyx2BhZ9Ge55EoJfl4Ow7GV4DxMfesy6deuU6s6ePaP0unHjRnkdwp9DJvj2O9eRDtuls3OhKpsuf//%2bZ7IQQt4D3ba05qGQ12XHju06Ty%2bZ2LoFDHVDjhw9Cvodl7//fVITNTdYjCDo8TpkoL8bIVAJBRgPcDsatW/Ac52DB/h9TvYIrBAAytYjq9qPhd55/z3ZDxxgo%2bP888%2brJxwHJizp6tKjP%2bTXouccaI0ecAJzBLk21P%2b06NDQEFz/Izlz5ozSGRXABIrZ3Y8//iijY2NyGqnxIsQ0k6YzZ55BMnRUDiPW6%2bpqNA8g1ZI2yQak115QJT2B7ySFLutdpuk3secIvPM2PM0ORVbX10ERThlEOtxYVyl%2bYACHD0J7EQ5e69rvdRTYJAn6XJMlbHNFgKQR0AlZoGPefEkjpw%2bAGWJA%2bEUQPAIEz%2bZbJAEEZ2OC1Vgmm1OXZN%2bOgMfBkpYoPweA2Q6QIy7k2BCxKC2DrI20xiovYVWDc%2bfNAUNElTqTFkVqX5B9w3xW6wt%2bh8zTiVCh0Ak2RtkwZbfJ6hKRCmuQXHl9LhlG3t8E2isqgCMAz/Bz4DzocxYiVIAXCjBtsJjV/opKlA0IvJQ0w1Hs87FzQx7WVhY%2baNpZKc0NOMeFUkByfiaT1rw%2bB75ugRBZ5fO8ximboix22BtMw8J8lr/psJ6nwvhcvsUIz7wibf2elEt2amtv10yV%2bQC7zFwL23H1AGcvUt8RSwEEweLwAA%2bKisAohPwuCXgcxACv%2bFmGagPErz2/SCKq3WAqgNesxVn3x%2bJx1Th5OJEyyQotylqfbSy1Hrwgox3dNp1PwyNoaZ6zOUIB49opYtMjpEfez1lNUSY3U50iNkowH9GGSky/X2ypZ/R501cg4DL3qEIe4IYHjA495AEQnkeGgAqvse8oRAJugRImS9xggGDMdH7ZH2QohLFAVoYBbYCYnj/dPqrNC9PljWtX13R5uVAKn2RTlC1sKIaZX1rb4vAUPEulpKkwWDWlro7fs73FzA8C5eApun/ALrEqLKEjD89jAyWViisI8n7G6inGre4y02F6ag0wgCEwhpK38SEPeDgMmBvAGwr%2bIgu4/EG4ftBsgEBo4wHIr8NIL7kPwCKDHZ2HFEDBmfqyz9faZvX/mZ6mzOIouFFASt2Zz2XZONX5/JTrc56KUY%2bhiyeNp/A9fCatmJE3ioHCiukwv8XmqdlwSaIgMulwHXIZVn%2bjw8s1DS4mQl4rHyAGMBEiDfqYB9gakQcwBEJezQRN3o/Yh2tSIf5wQHv%2bHEw5I3HT549bHkBPYKwyFNLcuEia3p4R1IQGhZtSgHoGFKChkVRFqqA632IUi2eTRUWkk1aWGbWapyb80tbGitlHMD1F9ifrGhoQCj4ZG%2b2XhnqjAOYCHIYCce7mnE09wO1oNm1x/jiEl4XpwtrGTulOUCyV0vYz3T9HixKg8qZlTRROK6h1KAMQsGhtujhBbc7cDhwz0ooQyRMMWzmflTkALx5bWnIWaGZ1dMxpV68wQJjRkOBoQ4qbUmZI63czFiC2tOXVC4u7SwTqJhRj4ahfVoz1S11NhQIfh9vKBZgI8QhFFECBrAlAgwQQoD%2brQO79RRJJxYBQtAiCMcUAgiBb1IlkzMRu2liWi6FFuOgMNz7gEblcykL1tCqE1m%2bBUnjdARZQdoAClB1wbLFYgNdZKC1rKYD40g4F8P0ZeBiFzeAd%2bSkFpKa20YwC7ABMv6x%2bdFQa6qohaJOmv8wCqQSP02SDCAmDAVQAKyllAPYDCYLxuO79BSNB3RGKxsI6%2bGHGYYrgpTs46SkWSGtekJ7ifca%2bwYaEAUFiQyZtgVpuKtaLpXCxHDagxhLXoLuGTtZqi8fNfoGyAGk4baia5TGNRIM12JpRYXpkzeoVulHq1jqgUWsBkwo3WXhgK3jZNyAIevxQAOjPG9JWEV6WMNZHWITZik4YFkhxxyhhGCCqZXBcF0pLpR6K6WLMq2fgmYwFlhrrWDStmrKuE/g954jwDANlkRQFN1igCoTVlXYTRcWYDVjeU%2bFVKWaPosFmk1DQjSp0PYqhalMOow7gcNmhBAzWAiiCCsQCFET0AK/2z%2bgBLC2560sFsMYPsYaPmR1h9gOKG5X8IK3NReUoUNoCuxQ3NA3aE6VjFkrTarQkLc%2bQSKh1ExZo/qUYzlGZBgQTFrtk1b2NZ8Q0DzEKSJqN2ETMosGQ7gpzs4RrcDTVm16AKsCqCK3hbG5QBXg9qAXY8KDw2hLnzg%2bEZr7vR2JR3P1hSCQzZvOT4RDWLSzjDVndE4wbntYFxmVOW07WrxyUlX1dsnqwWwa7O2UNuLl3yXwZH1wmj40ul/6lC/X3FJQCExcSltsXQ0HZhd%2b1rKzDUioVYfApol7AkKUBa%2bH6pbMeQQhUSi2AsA5FERmhvrYK1Fijo6GuqmBrqkOuUIMQCBoF6D4gt7ZgBdIg//QQ1z8nGHfPI6bJAAo6ROS82QRtAwvohmaLudaNTjw73N8j/cuWSO/SRTLUu1Q6F8yV5Us7pbtrkfT3LJZlSzoV1fMKjlltaNDdi/8jUBYgQCKUFP1z5n8DurFKBmHIcMeYYGyBYIq7UVBGAAZ0OLkZ04zRpD1CFmwujXsHjg5Ugx56xmQJud4XDuq%2bP90/ydST2SBTTN0ljusgHZIaI1ZmGNMU1GyNqWtaGSIBUPkczzM5ocWK/UFlE2s%2baqW8yWR8aru8%2bJ7i0bh7csrbIpYX6L9Fkn/VKxH900ZI4vg2/6XiA6653E6jBAd3pJD8uN0IB5uW36oAvxt4wFrA49LtL7sXYYAfMv3lLjH/IKF9Qv2niA85gcEDdmA5GBaBcPEvMmFVhtkcjWv7izTJ/l6Ci8biUgpkUbVwIhFRoIvGuRkatf4mQ1ePqMdxPmq5O5UQ0YyUuQqp2dqBjoVU6CAMyH0AP7yYoO3TfqJbt%2bogKJRgN1t2wLriFp7b7SgEqCSnffL/AXEe3RymXWrRAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"},"path":"/blog/cross-domain-communication-using-window-post-message/","timeToRead":2,"category":{"id":"JavaScript","title":"JavaScript"},"author":[{"id":"eswariboopathikumar","name":"Eswari Jayakumar","image":{"type":"image","mimeType":"image/png","src":"/geekyturtles-code/assets/static/eswariboopathikumar.6370538.8dd1692a41872507330a722c7ec399b8.png","size":{"width":60,"height":64},"sizes":"(max-width: 60px) 100vw, 60px","srcset":["/geekyturtles-code/assets/static/eswariboopathikumar.6370538.8dd1692a41872507330a722c7ec399b8.png 60w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 60 64' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-1bb70da44d6073cb51a7611c0b2387ad'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-1bb70da44d6073cb51a7611c0b2387ad)' width='60' height='64' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAABECAYAAAAx%2bDPIAAAACXBIWXMAAAsSAAALEgHS3X78AAATcUlEQVR42t1aB1hVx7beYG7yEhMrSLcbFbDE5EaDJragNMWCMdJRUSw0KZZo5BqjsdAEjfo0N%2bWaLyYaAbsxGhUTjYWqoFgBawIKInDarLfWzN6HA5obTAF8%2b/vWN3P2nj2z1r/%2btWbNOUeS/sbLtvPLkr2FCe/bW7YzptaufQcrO2vLVXZWFnkoahQNSj7ei7Vr37694Vh78zbSU331avucMN7KXBhvY%2b1oZ2Ve2tvaAnpZmYO9pRkX6tM9fFZmZ2PlKkAwM5b%2bP1x21lZGwvPtO6CB5WQstioUHQqThfoq%2bVmVnY1NV8N3n17jkdHoyWbCGMvoPsLLKnvhfcV4Rn17GRg%2bxtryfZkFzZ5uAGxsamLf2iJWprmGA0CGixbs5D49E2MskjkAFqZPZxj06GanT37ozWfkdhwZh17Vyl4HBQA9CPist2DAu4bv2lu0k3r27P300F650DA9hTsGfGKELEiX41xraLwMgFY8szhuOB/NYduxi8woa8muQ6emTHkrefvrRgwQ1O/Q0QQ9uQgNO4VG3q9LfwNRwqCMQMB3gu06dm5Bc/RuwY03EoBYNE0QFKVsO3WR7M3aynFv5YEG3SFac7EhMWe9rc2hl7XseTkU6DPeZ31wDImcC4pxjukGO4qYF0FoUpd9p2645/%2bP1P2VofrEhUoG9%2bKGm5PRalsLM22n1iasQ8u20LmNCevS1hS6m5mRx3mLnxk%2bB3zOupmaYi7AhGij1AcW2%2by69Hi2FggGodYE9nrLWjGPSvoIj5tDD7N2WjL61U5WzM/Zli0P7g9frRoGx7e4QnbKGMhNG8vb41vc%2bP2FU15lI1/rzMHoamKqI/CIEQjCvnbXQMkzPBx6duvRBIzv2Kk2PW1sXkavVvZB49EIrUMPG1gzdyAr2D8edOd9Aa74AxT4AVxEueBbI/T5Esplf7j38yRIWePI3N7oAh1amTBMjqq%2bNpYIgmWsvD02s%2b3Zj9ZsAgBYmfP4tzdpbiRTf0/f9hbQsZWJetoYeyg%2b8g4jo1meD1RmekFFhic8zPCCh9ivNBD6TPfpuSrHmwPx4KwX%2b3B2f2ICw1zBKKQwGb5mCHhTCQGF%2bi5921uS8do5Xn2ZLs8XxQcqznpyI6uyvKA621vfGgrd4yL36R0OxBV/9smSwdDNtJ2GQsHe2nIbZ4FZK2M8WEm2Xbo3nuG2HTrzaq9Pa7Hd92lveaibSTt4Z2h3TWWWN6hzvRl51dDAuob/FhDUr5RZAVcDWNL8gQyBpZ2kGtfsppwVepm2aPTDDqdin442/e0s%2bXbGslLGMIxrVpHx2x6vDxAGgDCW78tmjOul6Yq7xyudrKPkmuCZRjXetlN3VEIcWPp2tFrZuY0prF0wSIPxi8Z7sj9qfF0QKD8wDKerBz00r3e1hh7mZjs5AG2eN8JCq1G9z1uAb43Q%2bJ/Hv/UyKaxFYfWlfH1BwJxAyVQXH%2bkANi1Minxc%2b7SQ849RYyY/vrjja93MOrY2ffD16uE8aZH3DQF4UjAe9y7mA6Y778OKDk%2bA/t2smXlz0%2b5NAAAR/xYvmvYf1LM93E6fCJpzPowoqxjzMLP%2bQNQ13PBdAoByAe0sXiN6QnOp9QgZAONGrAEsePy/KLV0m%2bxmR3GqI0Wx5UrzbQyLHmof1mMbVPqVMoBUHOFOAtX4DPJ9OQiYXHWRXq/AC1ILD0MdGvy6kzFf6mUj9v9npBfdl8x4nRTWEQNOfu0CUVPsYP60XvBt0hC%2bp8MFP33R81uMUAoiMpbu71w/DN4L6gVzAmzh6H%2bcmBbnJgDm%2bfUDBH0C/94RdbiLujTo9WtGlFSd7Sk9K7WU48%2bo7wcz/8molEVvs21rhsBnHw2ELavfhJme3SHMtyec3u7KQSDj6npcAYKekddz0kZzAKdPfBk%2bWzEIvlg5CL6MfYtvh/iczfPvh4eCZ/vTys9LLY1V2ZO4Tg12abPH8Xb/Rmc5/oxfSpw3uJioj0rqMFmJ2r6AyllP2LTUASa5dYLVc1%2bDbDROobi%2b%2bpPl/G53WLPwdfAc1QnWLe4P9069y%2beguTD2iR2MQuqb%2bJHlGHhmtPI3cY7NDHVqsOthlj/3/r0zgZ1VuT6nbh%2bfrK3I8Ma9nycrfRWnzkUwrk%2bGvD3uEIsApK4b9ljjKdb3bXobVka9Cqe3Cbbw3JFRq4zm8987NUVXkemfUZkdwHeCyiy/hk2EFZlTJDg3VBKL%2b%2b6D4ilQdGS69mGmDymIygoDyQBS/uwONyg5id68EvCbIUAtMQgKp%2bBBKABUlAQRBIx7g5xB471Y4Q/TtXB1GlTn%2bBzmdUiBFdepwS40mrdlZ6c2R8VKqrN9oODALNwBhIKkaKWczLbGvwUTnDrymL774zsclLpJUBEyNv1LJ1g8uw9ET7WH9TED4OaxCZxFYow3U%2bV4wdWDM9n90/44l1f5/TNTW8k6NVw9gEby9sFZn%2baqbK/S6mw/yN8Tontw1lfPAA4AejB%2b/j9hzHAb8B/bFQoPewDlh8rM2ttgpSh1ISt1FA%2bTY1uceD7YhbtAGoaMpgYADvClA7NYyYlABMbzQdlpv1ayTg0HACrC23un/JurcjxLys9OhnM7Q3WoDHlFHwKk%2bI2jE3gSJKNqDPF6pAZQIzNup78j9n9KfLQjYMIzrAvEe16QtzuE3U4Pwvk8y0tOBrSSdWp4BpScmNwcvVBaejIQclLDdaU/ByBFPWVP1YCgGKR4sS71edKUxyrVo1Iz1IDEvY/jvBmCzYp%2bmCkYcKoRGIBZl7fXjoQ/r871unP3x%2bmQuWOO7tefJjN1jidTjNSXtBlCxH1vHtOaOmIQ53XES38fww0ozM4j264fmg1V2T73KjKnviTr1HAAPMgMlLQ5Hnzr0ZzzXl%2bVFQJnt0eo7xyfSl5hireqDDyH94HYQf1b6RNw1xiH4TGeSzH2b6V78GcUQmJsDRhKXqF7lPxyU8M0d4%2bHw8Msv82kQ%2blPk4xIp4beCo3EUbhtsyvfzTp4ae9cuHl0mlYJAUXoc0WGL9xGcAoPB1EGx2QXCGe2%2b2F16AGnto3F1huyUqYCzgPXDwVh5g9EQ0U%2bqTZgBc7FSk8G6C7uiYD83SEFv56Zyel/49jMhj0RKiFwYW/IP6jN2BExt/jQAvTkdDUxgLZDQXVP%2bOUnLIJ2h1KOgJyUcPIe5O0Mh7xdczBxhsG5tFDep3v0TBl3Li0M56O9XiQ%2bmpPmxqSnvXogGrJTw/dxBxSONkpZH6PXqUGuu2ei%2bIIZ30bwMjQrNXzy5f1RcHFvMFaDPkwjU/hWeiDkpoVxYzBuZQlDQ0Mhe0cotuFcRD%2b09jgEhoC4dmgGJT7K%2bBwM/Kwp%2bn4enhfCPqW1r%2b6Z1Sx9%2bzzUKbqBT4OnF0hndkTwPHBye1S/8zuFoRf2BLMbR6dxqpNHz8tG0TP%2beWcIIHPg1rFQoHE3j03F7S8ECvaFIBNCHgGMGFGwbzaFF1zG/Z/iv/D7aMhMmRMpg9943wtmpETw2Dv29bzmqGhhwd45pLxOUD3cwOsCgBtHA3GL8wP6svSLlQMh3L87hPp2h38vd%2bCHJqzm5JAJqQUCDw0RPrQDsAt75sDpbyMd5PAzLtw/s3EA%2bGlbtFRxJICDgADsIM%2bgghpDwxUDsHpDCntiJegNKyL7wcB%2bpuDoYAGOAy14f2lYX3lLnMRjP0cGsHb4hGICDCeW3DmxLbo1rYtMMPpq84eNA8BnGz%2bSSr4PFHkgZc4nNw7PJYU1hl7nNEbvXTkYhAWRL5zY6gpv9DWBoQPMhfQ3h2HY9u9jgtWiMx9zK31KLQadqwkj3eV9EZQA83Z9EfMCrfvz9qjG%2b07w2NfzpbsHA41lBnxVdCiaA4DClJygNwDjW53rjzX%2bKEh%2bvz98suwNlAFc/r38DViL97LTRuH5wQcu7Zfzh5w0FSEAKMwwAV7/advcFiIM5zQeAEe3zpduHAhSAPiy%2bJDCAEXpGu%2bRR3kYZNMPoL4YCgFQfiYIyk7PQGDwCHzJl75QhaIfpuuNP2cAAIGqAIAhcBVD4CUlBBoNAI/52yRU6hk5BJYVYwhQDlAY8CgIYTzTX8VwOL8rGLK%2bDYOsHbT3h/IQubh3tp763Pi0sLoM0F77Loryw1HDPNSoF1KQ54CzOyLGX94fyROV7C0RBnVAoJYSXO09P0yuCWo8X/O8hgEELrEMc8A6WjN/V8gzqZ/HNJ7xWzYvI8ONZE90QGpW5u3S01XPgrogGCa3R%2b7R2LTQR4yXAcAqMApwTU9D8Bv1OvFNtASnx/I%2bZvsjhQejyQiRB%2bpQ%2bA9JmhCcU3dhN68vKn7cNtdSZp3RD1vnNy4AByWQznwfwj1x8kDYxIKDEXA%2bNUxHZ/bzeg//WeP5XNprh6IgY0/YRlrr0olpxsc/X9A0/iBxP2AF3wkejk4afHkD1un7gwkE9rhE9qQAyHOw3L0h2sKUeXAjahmnf1HM4sal/zm/D6UL0hBJ7bGO54BfAteZsJEJhTAmAQo%2bjdLl7gkhEPTZ/ImZkGbwLrU7wnWqySsB3k4oKglM4v%2bTU3usNbpGuvgsbTjDS6M%2blqqcVoufxWdvlkocl/P/xOvck6aC%2b8cAw%2bI1Dz1XQO5OTFq7UPGUWlT%2b72AYjOGSKiT7u2C4G7EEYHCCBtzXg2500mz%2blZzjsufYjP8VR3THVVy3v5fqQRsk6C7Q1ngk6X%2bMmL8k%2bLky5xW7wHUtMOdYDYLAfgn/gOUgADn78WCzu2a7O1dnS1RqhbrG0zu5eELMPhAChSsWMjYijjGnWC24JkO584oDse%2bFvaCsrxm/husCbd6Xyqeu/3uM14xKlEDu60bGNhPfBoFU4BITljN47u2bQ2IAnOJ0bGQsoKIMQYAHvh/B9dXvQf6WSH7MzU0z3OIeL/zYjMbnb42AK2vnQ%2bmspQCOcQAjOQB8jVtDYwDXvFvgvDgSdeAhyBxX63OC1i3hL/Z84AZ9X%2bcSxyu/Mu/kl8E98YQOlcobiBXgoLm6KscVqGA8QxAYMgFgeDwX3Yg4uBe6FC4cCIZcOtbK3wzVEryXswOrQPT6nQX/Ao1LrDAcgQQnGVSnOFY9YiXk4VrncU10BKAOp8u9kmw5CC5xehDKgv6icKictFaCDouE8a7CeJXHmuE61/gH4JJMHlHfGBKjy3SIhGtvLeRKogBngrMQIEWHJEDVuki4m%2bMLhd8HQcHeYLiA536SiyjXvpsJt7L8oWI9OnVIIgCCRh7ncwjPk7DrgxcxWqt4yGIdrU066Fziq9RjE104CM5CR5Bmc93/3Lc%2bizZLOrd4kfBk2mtGJ45gSENwTiTF1IpiSEuW5RDJCge/ryiLypMRsiEj47hoNkRAdZ4nVF98F6rzJwnhfU/QbAoHcBbj%2bDvyHGK%2beCga8j7QGhhunGUg5laDcwIfoxmd4MZ1dRS64rt/8utvf5FQNGMS%2bIRV7yYPwBDQgFMCKaeRPS17PR7K3l4G%2bYPmwZW3FoLKEbesoauQxrE1IJBXhyaAJmgpqNYjEKkzoDptBqgQFM3MD4ANSxBjZONhRCyfQ41zXR28kM99f/gyDgatWQMC6YKh5oIh8m7Sm4Y6l0/e8MeML58mjK/0TOZJpjR0YxtkQyE4r3nEeE53ojkpgcrfHRwDV5z%2bBbejPgO1e6IwRCiNHiajEnhIwDBZqE/39FSP52GDHoU70Z/DFeclcAfn1DmJeWrWqwMC6oaheev%2bzPXtuMMmJRv9if1%2brVQQnybBgGXiBxD3hM/A7WNaSC0vqI91fcxTnyiLXteOS4Kb14ugODUdyt6IgaqRq0A7crUcGrGPFXpGY6qcVuE7i6H4myNws/gGaCYk8zlFeMTWWrOWLqQb6oi6fsVD4ZUPjDO2HkZb1j2Z8beWi%2bJCNSHRWFA/aRC4JpJXdHwxGXV9rBsqReK4GtjYZKi6UwpVmVdBM/BDqEajVJjB1SNWgQaNJEPpHcrk9JmEntEYGqtxWApVPxdAVUkZMA%2bsL95eJcKiznp6oZ1H6KYD1ySonpg0XCTsxCf/8wRIi6RrmzdJ0GU5f1nrnpDKixyF%2bjLidUXUAMQAAiAJKm7/CpWnCgDe/AjAJQEe985jhcYOWg6VP%2bZDxa/3OAAgA/CI4craNSzQkK5a9/i93JaWS4wub9n8hD98LNgkqd4RyFX6JvXE5KKGkWKR3zLeQBEDAEqg8vQlBGA5MJea2P1dwbEwcBkCcOERAH5nbZkFcZQQdZXeSX0UJpNNT3RhwuNZVD0%2bMYriCqmlqY/3/hsA9WXAHwXAIBw0pLN6XOIieTt8spNjYfynEvSS6T8qfr9Mf23d2G%2bSAIhcwM8MWrf4H3gYdPjAiGyq/z/AfMX2UTJnY0uk0hVR9MTpfo/%2bTQEAOQx4oYa6F92ftb6toU31upTsX%2b25pgeWv9VK/DdoCAxCAI5jEvylVAZgdb1DQJ8HXOM01ZPW9Da0qV6XWt46qieuGQCjk4lW2gYHgBhw6hJUlD8ANmGdYIDzkwCAR2f3taCamDhYtqn%2beQAPFyL%2bXeMdwG2tAgA0KAD4jmrLcajEWoAbrmyx9dWBJ8J1VBkOlW2qPwD4srHcOlAyqW8C/MsAEAbwElo5E%2bjv1T8R8noA%2b0MND3P1uvBlY7l1kCdp0BBQvM0M%2bk/IAKYwAPtDZVseC8D/AV3ZB5bgY9sGAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"},"path":"/author/eswari-jayakumar/"}]}},"context":{"previousElement":"3d01859d19f86ef18120eb5025ada6ec","nextElement":"eb36a3db47748968c23948593470de93","id":"a0e95e836497dccf407bff24d287a81d"}}